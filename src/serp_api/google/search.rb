require_relative "../response"

module SerpApi
  module Google
    class Search
      private attr_reader :query, :api_key, :country, :location, :num, :async

      # TODO: Would it be better to validate the list of possible countries?
      def initialize(query, api_key:, country: 'us', location: nil, num: nil, async: nil)
        @query = query
        @api_key = api_key
        @country = country
        @location = location
        @num = num
        @async = async
      end

      def search_metadata
        Data.define(:id)[**body["search_metadata"].slice("id")]
      end

      def search_information
        OpenStruct.new body["search_information"].slice("spelling_fix")
      end

      def organic_results
        body["organic_results"].to_a.map { Data.define(:link)[**_1.slice("link")] }
      end

      def answer_box = Data.define(:answer)[**body["answer_box"].slice("answer")]

      # Note: I can't list all the possible keys because some are autogenerated (like "born").
      def knowledge_graph = body["knowledge_graph"]

      private

        def body
          @body ||= SerpApi::Response.new(params).to_h
        end

        # hl: "en"
        def params
          { q: query, api_key:, engine: "google", gl: country, location:, num:, async: }.compact
        end
    end
  end
end
